#!/bin/csh 
### script to run a serial job using one core on htc using queue windfall or standard 
 
### beginning of line, three pound/cross-hatch characters indicate comment 
### beginning of line #PBS indicates an active PBS command/directive 
### use ###PBS and #PBS to deactivate and lines without removing them from script 
 
### Refer to UA Batch System website for system and queue specific limits (max values) 
### Minimize resource requests (ncpus, mem, walltime, cputime, etc) to minimize queue wait delays 
 
### Set the job name 
#PBS -N qkt_search_01 
 
### Request email when job begins and ends 
###PBS -m bea 
 
### Specify email address to use for notification. 
###PBS -M baeeeeee@email.arizona.edu
 
### Specify the PI group for this job 
### List of PI groups available to each user can be found with "va" command 
#PBS -W group_list=pjessen 
 
### Set the queue for this job as windfall or standard (adjust ### and #) 
#PBS -q standard 
###PBS -q windfall 
 
### Set the jobtype for this job (serial, small_mpi, small_smp, large_mpi, large_smp) 
### jobtype=serial submits to htc and can be automatically moved to cluster and smp 
### Type parameter determines initial queue placement and possible automatic queue moves 
### NOW OBSOLETE with OCELOTE
### PBS -l jobtype=cluster_only 
 
### Set the number of cores (cpus) and memory that will be used for this job 
### When specifying memory request slightly less than 2GB memory per ncpus for standard node 
### Some memory needs to be reserved for the Linux system processes 
#PBS -l select=1:ncpus=1:mem=6gb 
#PBS -l pvmem=23gb 
 
### Important!!! Include this line for your 1p job. 
### Without it, the entire node, containing 12 core, will be allocated 
#PBS -l place=pack:shared 
 
### Specify "wallclock time" required for this job, hhh:mm:ss 
#PBS -l walltime=48:00:00 

#PBS -J 1-200
 
### Specify total cpu time required for this job, hhh:mm:ss 
### total cputime = walltime * ncpus 
#PBS -l cput=48:00:00 
 
### set directory for job execution, ~netid = home directory path 
cd ~nlysne/ngrape_rot/

### Load matlab module and run file.m program  
module load matlab 
/usr/bin/time matlab -singleCompThread -nodisplay -nojvm -r "ngrape_RUN_rot_uni_fn( [${PBS_ARRAY_INDEX}; 40; 0; 10 ] ,'uni_16D_qkt_p0p99_k2p3','QKT_','p0p99_k2p3_rotSearch_')" 
exit 
